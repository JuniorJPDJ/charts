{{/* Preprocess values and prepare config file */}}
{{- include "bjw-s.common.loader.init" . }}
{{- define "ejabberd.preprocess" -}}
controllers:
  main:
    containers:
      main:
        image:
          {{- toYaml .Values.image | nindent 10 }}

persistence:
  {{- $dot := . }}
  {{- range $name, $v := .Values.certificates }}
  {{- if dig "enabled" true $v }}
  {{- printf "%s-cert" $name | nindent 2 }}:
    type: secret
    name: {{ include "bjw-s.common.lib.chart.names.fullname" $dot }}-{{ $name }}-cert
    globalMounts:
      - path: /home/ejabberd/conf/certs/{{ $name }}
        readOnly: true
  {{- end }}
  {{- end }}

configMaps:
  config:
    data:
      {{- range $name, $cfg := .Values.configs }}
      {{ quote $name }}: |-
        {{- toYaml $cfg | nindent 8 }}
      {{- end }}
{{- end -}}

{{/* Template for generating certfiles from certificates */}}
{{- define "ejabberd.dynamic_certfiles" -}}
{{- range $name, $v := .Values.certificates }}
{{- if dig "enabled" true $v }}
  - /home/ejabberd/conf/certs/{{ $name }}/tls.crt
  - /home/ejabberd/conf/certs/{{ $name }}/tls.key
{{- end }}
{{- end }}
{{- end -}}

{{/* Concatenate certfiles from certificates and provided by user */}}
{{- $ejabberdyml := get .Values.configs "ejabberd.yml" }}
{{- $certfiles := concat (dig "certfiles" (list) $ejabberdyml) (include "ejabberd.dynamic_certfiles" . | fromYamlArray) }}
{{- $_ := set $ejabberdyml "certfiles" (default (list) $certfiles) }}
{{- $_ = set .Values.configs "ejabberd.yml" $ejabberdyml }}

{{/* Merge values provided by user with those generated by preprocessing */}}
{{- $_ = mustMerge .Values (include "ejabberd.preprocess" . | fromYaml) -}}

{{/* Render the templates */}}
{{- include "bjw-s.common.loader.all" . }}
