{{/* Preprocess values and prepare config file */}}
{{- define "certpuller.preprocess" -}}
{{- $dot := . }}
controllers:
{{- range $name, $v := .Values.domains }}
{{- if dig "enabled" true $v }}
  pull-{{ replace "." "-" $name }}-cert:
    type: cronjob
    primary: false
    cronjob:
      schedule: {{ required "refreshSchedule is required" $v.refreshSchedule }}
    containers:
      main:
        {{- toYaml $dot.Values.containerConfig | nindent 8 }}
        command:
          - sh
          - '-c'
          - >
            openssl s_client -showcerts -servername "{{ required "sourceDomain is required" $v.sourceDomain }}" -connect "{{ $v.sourceDomain }}:{{ required "sourcePort is required" $v.sourcePort }}" </dev/null 2>/dev/null
            | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
{{- end }}
{{- end }}

secrets:
{{- range $name, $v := .Values.domains }}
{{- if dig "enabled" true $v }}
  {{ replace "." "-" $name }}-cert:
    stringData:
      tls.key: |-
        {{- required "privateKey is required" $v.privateKey | nindent 8 }}
{{- end }}
{{- end }}

{{- end -}}
{{- $_ := merge .Values (include "certpuller.preprocess" . | fromYaml) -}}

{{/* Render the templates */}}
{{- include "bjw-s.common.loader.all" . }}
